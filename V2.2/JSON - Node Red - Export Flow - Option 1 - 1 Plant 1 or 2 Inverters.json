[
    {
        "id": "9512e2fe31389491",
        "type": "tab",
        "label": "Sunsynk Gather - Usable - 2 Inverter 1 Plant",
        "disabled": false,
        "info": "",
        "env": []
    },
    {
        "id": "6787251a9356da8e",
        "type": "function",
        "z": "9512e2fe31389491",
        "name": "Export Data Export To Entity",
        "func": "function scroll_all_items(s_payload, t_tkey) {\n    if (typeof s_payload === 'number') {\n        returnvalue[t_tkey] = s_payload;\n    } else if (typeof s_payload === 'string') {\n        returnvalue[t_tkey] = s_payload;\n    } else {\n        Object.entries(s_payload).forEach((entry) => {\n            const [key, value] = entry;\n            if (value === null || value === \"\") {\n                if (t_tkey === \"\") { returnvalue[key] = \"Missing\"; } else { returnvalue[t_tkey + \"_\" + key] = \"Missing\"; }\n            } else if (s_payload[key].length === 0) {\n                if (t_tkey === \"\") { returnvalue[key] = \"Missing\"; } else { returnvalue[t_tkey + \"_\" + key] = value; }\n            } else if (typeof s_payload[key] === 'number') {\n                if (t_tkey === \"\") { returnvalue[key] = value; } else { returnvalue[t_tkey + \"_\" + key] = value; }\n            } else if (typeof s_payload[key] === 'string') {\n                if (t_tkey === \"\") { returnvalue[key] = value; } else { returnvalue[t_tkey + \"_\" + key] = value; }\n            } else if (typeof s_payload[key] === 'object') {\n                if (Array.isArray(s_payload[key])) {\n                    if (t_tkey === \"\") { process_array(s_payload[key], key); } else { process_array(s_payload[key], t_tkey + \"_\" + key); }\n                } else {\n                    if (t_tkey === \"\") { scroll_all_items(s_payload[key], key); } else { scroll_all_items(s_payload[key], t_tkey + \"_\" + key); }\n                }\n            } else {\n                if (t_tkey === \"\") { returnvalue[key] = value; } else { returnvalue[t_tkey + \"_\" + key] = value; }\n            }\n        })\n    };\n    return;\n}\n\nfunction process_array(s_payload, t_tkey) {\n    if (t_tkey === \"infos_0_plantPermission\") { returnvalue[t_tkey] = \"Not Processed\" }\n    else {\n        for (let i = 0; i < s_payload.length; i++) {\n            scroll_all_items(s_payload[i], t_tkey + \"_\" + i);\n        }\n    }\n    return;\n}\n\nfunction checktrue(t_check) {\n    if (t_check === \"true\") { return true; }\n    else if (t_check === 1) { return true; }\n    else if (t_check === \"1\") { return true; }\n    else if (t_check === \"True\") { return true; }\n    else if (t_check === \"TRUE\") { return true; }\n    else if (t_check === \"on\") { return true; }\n    else if (t_check === \"ON\") { return true; }\n    else if (t_check === \"On\") { return true; }\n    else if (t_check === true) { return true; }\n    else { return false; }\n}\n\nfunction do_value__consolid(s_payload, t_tkey) {\n    var tvalue = 0;\n    if (global.get(\"SunSynkDebug\") === 1) { node.error(s_payload);}\n    Object.entries(s_payload).forEach((entry) => {\n        const [key, value] = entry;\n        if (global.get(\"SunSynkDebug\") === 1) { node.error(\"1. \"+key);}\n        var s_payload1=global.get(\"SS_Consolid.Plant.\"+key+\".Inverter\");\n        if (global.get(\"SunSynkDebug\") === 1) { node.error(s_payload1)}\n        Object.entries(s_payload1).forEach((entry1) => {\n            const [key1, value1] = entry1;\n            tvalue = tvalue + parseFloat(global.get(\"SS_Consolid.Plant.\"+key+\".Inverter.\"+key1+\".\"+t_tkey));\n            if (global.get(\"SunSynkDebug\") === 1) { node.error(\"2. \"+key+\" \"+key1+\" \"+tvalue);}\n        });\n    });\n    return tvalue;\n}\n\nfunction do_value__single(s_payload, t_tkey, t_sn) {\n    var tvalue = 0;\n    if (global.get(\"SunSynkDebug\") === 1) { node.error(s_payload);}\n    Object.entries(s_payload).forEach((entry) => {\n        const [key, value] = entry;\n        if (global.get(\"SunSynkDebug\") === 1) { node.error(\"1. \"+key);}\n        var s_payload1=global.get(\"SS_Consolid.Plant.\"+key+\".Inverter\");\n        if (global.get(\"SunSynkDebug\") === 1) { node.error(s_payload1)}\n        Object.entries(s_payload1).forEach((entry1) => {\n            const [key1, value1] = entry1;\n            if ( parseFloat(t_sn) === parseFloat(key1)) { tvalue = (global.get(\"SS_Consolid.Plant.\"+key+\".Inverter.\"+key1+\".\"+t_tkey)); }\n            if (global.get(\"SunSynkDebug\") === 1) { node.error(\"2. \"+key+\" \"+key1+\" \"+tvalue);}\n        });\n    });\n    return tvalue;\n}\n\nfunction do_value__single_plant(s_payload, t_tkey, t_sn) {\n    var tvalue = 0;\n    if (global.get(\"SunSynkDebug\") === 1) { node.error(s_payload); }\n    Object.entries(s_payload).forEach((entry) => {\n        const [key, value] = entry;\n        if (global.get(\"SunSynkDebug\") === 1) { node.error(\"D:\" + key + \":\" + t_tkey + \":\" + t_sn); }\n        if (parseFloat(t_sn) === parseFloat(key)) \n         { \n            tvalue = (global.get(\"SS_Consolid.Plant.\" + key + \".\" + t_tkey));\n            if (global.get(\"SunSynkDebug\") === 1) { node.error(\"D:\" + key + \":\" + t_tkey + \":\" + t_sn + \":\" + tvalue); } \n         }\n        if (global.get(\"SunSynkDebug\") === 1) { node.error(\"1. \" + key); }\n    });\n    return tvalue;\n}\n\n\nfunction updatesensor(t_sensor,t_value,t_attributes) {\n    msg.payload = {};\n    msg.payload.attributes = t_attributes;\n    msg.entityid = t_sensor;\n    msg.payload.state = t_value;\n    node.send([msg,null]);\n}\n\nvar ErrorCk = global.get(\"SS.ErrorCk\"); //Error types to check against \nvar sn = global.get(global.get(\"HA\") + '.states[\\'sensor.sunsynk_config\\'].attributes.sn_data');\nif (ErrorCk.includes(sn)) { node.status(\"Problem with sn_data in config\"); node.error(\"Problem with sn_data in config\"); return null }\nvar sn_check = global.get(\"SS_Consolid.ListInverters.\" + sn);\nif (ErrorCk.includes(sn_check)) { node.status(\"sn_data(\" + sn + \") is missing in known inverter list\"); node.error(\"sn_data(\" + sn + \") is missing in known inverter list\"); return null }\nif ((sn_check === \"True\") || (sn_check === \"Gather\")) { } else { node.status(\"sn_data(\" + sn + \") is is not enabled for data gathering\"); node.error(\"sn_data(\" + sn + \") is not enabled for data gathering\"); return null }\nvar flow_sn = global.get(global.get(\"HA\") + '.states[\\'sensor.sunsynk_config\\'].attributes.sn_flow');\nif (ErrorCk.includes(flow_sn)) { node.status(\"Problem with sn_flow in config\"); node.error(\"Problem with sn_flow in config\"); return null }\nvar sn_flow_check = global.get(\"SS_Consolid.ListPlants.\"+flow_sn);\nif (ErrorCk.includes(sn_flow_check)) { node.status(\"sn_flow(\" + flow_sn + \") is missing in known inverter list\"); node.error(\"sn_flow(\" + flow_sn +\") is missing in known inverter list\"); return null }\nif (sn_flow_check === \"True\") { } else { node.status(\"sn_flow(\" + flow_sn + \") is is not enabled for data gathering\"); node.error(\"sn_flow(\" + flow_sn +\") is not enabled for data gathering\"); return null }\n\n// PV Entries\nglobal.set(\"SS_Export_Data.pv.1_power\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"input.pvIV.0.ppv\")));\nglobal.set(\"SS_Export_Data.pv.1_current\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"input.pvIV.0.ipv\")));\nglobal.set(\"SS_Export_Data.pv.1_volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.0.vpv\", sn)));\nglobal.set(\"SS_Export_Data.pv.2_power\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"input.pvIV.1.ppv\")));\nglobal.set(\"SS_Export_Data.pv.2_current\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"input.pvIV.1.ipv\")));\nglobal.set(\"SS_Export_Data.pv.2_volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.1.vpv\", sn)));\nglobal.set(\"SS_Export_Data.pv.3_power\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.2.ppv\")));\nglobal.set(\"SS_Export_Data.pv.3_current\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.2.ipv\")));\nglobal.set(\"SS_Export_Data.pv.3_volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.2.vpv\", sn)));\nglobal.set(\"SS_Export_Data.pv.4_power\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.3.ppv\")));\nglobal.set(\"SS_Export_Data.pv.4_current\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.3.ipv\")));\nglobal.set(\"SS_Export_Data.pv.4_volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"input.pvIV.3.vpv\", sn)));\nglobal.set(\"SS_Export_Data.pv.power\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"input.pac\")));\nglobal.set(\"SS_Export_Data.pv.current\", parseFloat(global.get(\"SS_Export_Data.pv.1_current\") + global.get(\"SS_Export_Data.pv.2_current\") + global.get(\"SS_Export_Data.pv.3_current\") + global.get(\"SS_Export_Data.pv.4_current\")));\nglobal.set(\"SS_Export_Data.pv.etotal\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"input.etotal\")));\nglobal.set(\"SS_Export_Data.pv.etoday\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"input.etoday\")));\n// Load Entries\nglobal.set(\"SS_Export_Data.load.power\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"load.totalPower\")));\nglobal.set(\"SS_Export_Data.load.totalused\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"load.totalUsed\")));\nglobal.set(\"SS_Export_Data.load.dailyused\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"load.dailyUsed\")));\nglobal.set(\"SS_Export_Data.load.current\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"load.vip.0.current\")) + parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"load.vip.1.current\")) + parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"load.vip.2.current\")));\nglobal.set(\"SS_Export_Data.load.volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"load.vip.0.volt\", sn)));\nglobal.set(\"SS_Export_Data.load.upspower\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"load.upsPowerTotal\")));\nglobal.set(\"SS_Export_Data.load.smartloadstatus\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"load.smartLoadStatus\", sn)));\nglobal.set(\"SS_Export_Data.load.fac\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"load.loadFac\", sn)));\n// Battery Entries\nglobal.set(\"SS_Export_Data.battery.soc\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.soc\",sn)));\nglobal.set(\"SS_Export_Data.temp.battery\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.temp\",sn)));\nglobal.set(\"SS_Export_Data.battery.voltage\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.voltage\",sn)));\nglobal.set(\"SS_Export_Data.battery.chargevolt\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.chargeVolt\",sn)));\nglobal.set(\"SS_Export_Data.battery.status\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.status\",sn)));\nglobal.set(\"SS_Export_Data.battery.chargecurrentlimit\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.chargeCurrentLimit\",sn)));\nglobal.set(\"SS_Export_Data.battery.dischargecurrentlimit\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.dischargeCurrentLimit\",sn)));\nglobal.set(\"SS_Export_Data.battery.capacity\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"battery.correctCap\",sn)));\nglobal.set(\"SS_Export_Data.battery.current\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"battery.current\")));\nglobal.set(\"SS_Export_Data.battery.power\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"battery.power\")));\nglobal.set(\"SS_Export_Data.battery.etotalchg\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"battery.etotalChg\")));\nglobal.set(\"SS_Export_Data.battery.etotaldischg\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"battery.etotalDischg\")));\nglobal.set(\"SS_Export_Data.battery.etodaychg\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"battery.etodayChg\")));\nglobal.set(\"SS_Export_Data.battery.etodaydischg\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"battery.etodayDischg\")));\nglobal.set(\"SS_Export_Data.battery.efficiency\",parseInt(100-(global.get(\"SS_Export_Data.battery.etotalchg\")-global.get(\"SS_Export_Data.battery.etotaldischg\"))/global.get(\"SS_Export_Data.battery.etotaldischg\")*100));\n// ACDC\nglobal.set(\"SS_Export_Data.temp.ac\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"acdc.actemp\",sn)));\nglobal.set(\"SS_Export_Data.temp.dc\",parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"),\"acdc.dctemp\",sn)));\n//Output\nglobal.set(\"SS_Export_Data.output.poweraux\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"output.poweraux\")));\nglobal.set(\"SS_Export_Data.output.totalused\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"output.etotal\")));\nglobal.set(\"SS_Export_Data.output.dailyused\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"output.etoday\")));\nglobal.set(\"SS_Export_Data.output.totalpower\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"output.pac\")));\nglobal.set(\"SS_Export_Data.output.invpower\",parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"),\"output.pInv\")));\nglobal.set(\"SS_Export_Data.output.loadfac\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"output.fac\", sn)));\nglobal.set(\"SS_Export_Data.output.volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"output.vip.0.volt\", sn)));\nglobal.set(\"SS_Export_Data.output.current\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"output.vip.0.current\", sn)) + parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"output.vip.1.current\", sn)) + parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"output.vip.2.current\", sn)));\n//Gen\nglobal.set(\"SS_Export_Data.gen.totalused\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"gen.genTotal\")));\nglobal.set(\"SS_Export_Data.gen.dailyused\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"gen.Daily\")));\nglobal.set(\"SS_Export_Data.gen.totalpower\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"gen.totalPower\")));\nglobal.set(\"SS_Export_Data.gen.fac\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"gen.Fac\", sn)));\nglobal.set(\"SS_Export_Data.gen.volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"gen.vip.0.volt\", sn)));\nglobal.set(\"SS_Export_Data.gen.current\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"gen.vip.0.current\", sn)) + parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"gen.vip.1.current\", sn)) + parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"gen.vip.2.current\", sn)));\n//Grid\nglobal.set(\"SS_Export_Data.grid.totalusedin\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.etotalFrom\")));\nglobal.set(\"SS_Export_Data.grid.totalusedout\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.etotalTo\")));\nglobal.set(\"SS_Export_Data.grid.dailyusedin\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.etodayFrom\")));\nglobal.set(\"SS_Export_Data.grid.dailyusedout\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.etodayTo\")));\nglobal.set(\"SS_Export_Data.grid.power\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.pac\")));\nglobal.set(\"SS_Export_Data.grid.fac\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"grid.fac\", sn)));\nglobal.set(\"SS_Export_Data.grid.status\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"grid.status\", sn)));\nglobal.set(\"SS_Export_Data.grid.pf\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"grid.pf\", sn)));\nglobal.set(\"SS_Export_Data.grid.volt\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"grid.vip.0.volt\", sn)));\nglobal.set(\"SS_Export_Data.grid.current\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.vip.0.current\")) + parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.vip.1.current\")) + parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.vip.2.current\")) );\nif (parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"grid.fac\", sn)) < 45 )\n  { \n    global.set(\"SS_Export_Data.grid.gridonline\", false);\n  } else {  \n    global.set(\"SS_Export_Data.grid.gridonline\", true);\n  }\nglobal.set(\"SS_Export_Data.grid.limitertotalpower\", parseFloat(do_value__consolid(global.get(\"SS_Consolid.Plant\"), \"grid.limiterTotalPower\")));\n//Inverter \nglobal.set(\"SS_Export_Data.inverter.status\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"status\", sn)));\nglobal.set(\"SS_Export_Data.inverter.gatewaystatus\", parseFloat(do_value__single(global.get(\"SS_Consolid.Plant\"), \"gatewayVO.status\", sn)));\nglobal.set(\"SS_Export_Data.inverter.lastupdated\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"updateAt\", sn));\nglobal.set(\"SS_Export_Data.inverter.usetimer\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.peakAndVallery\", sn)));\nglobal.set(\"SS_Export_Data.inverter.selltime1\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.sellTime1\", sn));\nglobal.set(\"SS_Export_Data.inverter.selltime2\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.sellTime2\", sn));\nglobal.set(\"SS_Export_Data.inverter.selltime3\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.sellTime3\", sn));\nglobal.set(\"SS_Export_Data.inverter.selltime4\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.sellTime4\", sn));\nglobal.set(\"SS_Export_Data.inverter.selltime5\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.sellTime5\", sn));\nglobal.set(\"SS_Export_Data.inverter.selltime6\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.sellTime6\", sn));\nglobal.set(\"SS_Export_Data.inverter.energymode\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.energyMode\", sn));\nglobal.set(\"SS_Export_Data.inverter.time1on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.time1on\", sn));\nglobal.set(\"SS_Export_Data.inverter.time2on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.time2on\", sn));\nglobal.set(\"SS_Export_Data.inverter.time3on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.time3on\", sn));\nglobal.set(\"SS_Export_Data.inverter.time4on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.time4on\", sn));\nglobal.set(\"SS_Export_Data.inverter.time5on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.time5on\", sn));\nglobal.set(\"SS_Export_Data.inverter.time6on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.time6on\", sn));\nglobal.set(\"SS_Export_Data.inverter.gentime1on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.genTime1on\", sn));\nglobal.set(\"SS_Export_Data.inverter.gentime2on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.genTime2on\", sn));\nglobal.set(\"SS_Export_Data.inverter.gentime3on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.genTime3on\", sn));\nglobal.set(\"SS_Export_Data.inverter.gentime4on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.genTime4on\", sn));\nglobal.set(\"SS_Export_Data.inverter.gentime5on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.genTime5on\", sn));\nglobal.set(\"SS_Export_Data.inverter.gentime6on\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.genTime6on\", sn));\nglobal.set(\"SS_Export_Data.inverter.cap1\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.cap1\", sn));\nglobal.set(\"SS_Export_Data.inverter.cap2\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.cap2\", sn));\nglobal.set(\"SS_Export_Data.inverter.cap3\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.cap3\", sn));\nglobal.set(\"SS_Export_Data.inverter.cap4\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.cap4\", sn));\nglobal.set(\"SS_Export_Data.inverter.cap5\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.cap5\", sn));\nglobal.set(\"SS_Export_Data.inverter.cap6\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.cap6\", sn));\nglobal.set(\"SS_Export_Data.inverter.sellTime1Pac\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.selltime1pac\", sn)));\nglobal.set(\"SS_Export_Data.inverter.sellTime2Pac\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.selltime2pac\", sn)));\nglobal.set(\"SS_Export_Data.inverter.sellTime3Pac\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.selltime3pac\", sn)));\nglobal.set(\"SS_Export_Data.inverter.sellTime4Pac\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.selltime4pac\", sn)));\nglobal.set(\"SS_Export_Data.inverter.sellTime5Pac\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.selltime5pac\", sn)));\nglobal.set(\"SS_Export_Data.inverter.sellTime6Pac\", checktrue(do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.selltime6pac\", sn)));\nglobal.set(\"SS_Export_Data.inverter.batteryrestartcap\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.batteryRestartCap\", sn));\nglobal.set(\"SS_Export_Data.inverter.batterymaxcurrentcharge\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.batteryMaxCurrentCharge\", sn));\nglobal.set(\"SS_Export_Data.inverter.batteryshutdowncap\", do_value__single(global.get(\"SS_Consolid.Plant\"), \"settings.batteryShutdownCap\", sn));\n///\n/// Flow Calculations\n///\nglobal.set(\"SS_Export_Data.flow.battery.soc\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.soc\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.load.power\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.loadOrEpsPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.pv.power\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.pvPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.battery.power\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.battPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.grid.power\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.gridOrMeterPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.gen.power\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.genPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.min.power\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.minPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.misc.heatpumppower\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.heatPumpPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.misc.smartloadpower\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.smartLoadPower\", flow_sn)));\nglobal.set(\"SS_Export_Data.flow.misc.homeloadpower\", parseFloat(do_value__single_plant(global.get(\"SS_Consolid.Plant\"), \"flow.homeLoadPower\", flow_sn)));\n\n///\n/// Personal Calculations\n///\nglobal.set(\"SS_Export_Data.inverter.internalpowerusage\", global.get(\"SS_Export_Data.pv.power\") + global.get(\"SS_Export_Data.grid.power\") + global.get(\"SS_Export_Data.battery.power\") - global.get(\"SS_Export_Data.load.power\"));\n///\n///\n///\nnode.status(\"Starting Sensor Export\");\nvar returnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.inverter\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_inverter\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.pv\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_pv\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.load\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_load\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.battery\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_battery\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.output\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_output\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.gen\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_gen\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.grid\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_grid\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.flow\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_flow\", \"\", returnvalue);\n\nreturnvalue = {};\nvar origpayload = global.get(\"SS_Export_Data.temp\");\nscroll_all_items(origpayload, \"\");\nupdatesensor(\"sensor.sunsynk_usable_temp\", \"\", returnvalue);\n\n//returnvalue = {};\n//var origpayload = global.get(\"SS_Consolid\");\n//scroll_all_items(origpayload, \"\");\n//updatesensor(\"sensor.sunsynk_consolidated_data\", \"\", returnvalue);\n\nnode.status(\"Finished Sensor Export\");\nglobal.set(\"SS.ScanDelay\", false);\nif (global.get(\"SunSynkDebug\") === 1) { node.error(msg); }\nif (global.get(\"SS.UpdateDelay\") === true) { node.error(\"Midway Update Found\"); return [null,null]; }\nreturn ([null,{state:\"Process Services\"}]);",
        "outputs": 2,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 400,
        "y": 80,
        "wires": [
            [
                "a87140435b7c108d"
            ],
            [
                "9ea2967223ae0740"
            ]
        ]
    },
    {
        "id": "d7c3d498747710ae",
        "type": "link in",
        "z": "9512e2fe31389491",
        "name": "Garther In 1",
        "links": [
            "cecf77c8e14e7b61"
        ],
        "x": 155,
        "y": 80,
        "wires": [
            [
                "6787251a9356da8e"
            ]
        ]
    },
    {
        "id": "a87140435b7c108d",
        "type": "link out",
        "z": "9512e2fe31389491",
        "name": "Gather Out 2",
        "mode": "link",
        "links": [
            "549f0a69133a3354"
        ],
        "x": 635,
        "y": 60,
        "wires": []
    },
    {
        "id": "9ea2967223ae0740",
        "type": "link out",
        "z": "9512e2fe31389491",
        "name": "Gather Out 3",
        "mode": "link",
        "links": [
            "e8811ab2e151ac5e"
        ],
        "x": 635,
        "y": 120,
        "wires": []
    }
]