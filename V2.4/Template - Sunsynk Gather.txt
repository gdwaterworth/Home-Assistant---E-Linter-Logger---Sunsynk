sensor:
  - platform: filter
    name: "Sunsynk filtered pv"
    unique_id: sensor.sunsynk_filtered_pv
    entity_id: sensor.sunsynk_pv_total_pre
    filters:
       - filter: outlier
         window_size: 100
         radius: 50
  - platform: filter
    name: "Sunsynk filtered battery chg"
    unique_id: sensor.sunsynk_filtered_battery_chg
    entity_id: sensor.sunsynk_battery_etotalchg_pre
    filters:
       - filter: outlier
         window_size: 100
         radius: 50
  - platform: filter
    name: "Sunsynk filtered battery dischg"
    unique_id: sensor.sunsynk_filtered_battery_dischg
    entity_id: sensor.sunsynk_battery_etotaldischg_pre
    filters:
       - filter: outlier
         window_size: 100
         radius: 50
  - platform: filter
    name: "Sunsynk filtered grid"
    unique_id: sensor.sunsynk_filtered_grid
    entity_id: sensor.sunsynk_grid_total_pre
    filters:
       - filter: outlier
         window_size: 100
         radius: 50
  - platform: filter
    name: "Sunsynk filtered load"
    unique_id: sensor.sunsynk_filtered_load
    entity_id: sensor.sunsynk_load_total_pre
    filters:
       - filter: outlier
         window_size: 100
         radius: 50
#####
#####
##### Put These After the Sensor Templtes
##### Used By Automation and Event Flows
##### TESTINGING Events for Setting Inverter Settings
#####
#####
input_boolean:
  enable_sunsynk_auto_mode:
   initial: true
  enable_ups_manual_override:
   initial: false
  sunsynk_time1on:
  sunsynk_time2on:
  sunsynk_time3on:
  sunsynk_time4on:
  sunsynk_time5on:
  sunsynk_time6on:
  sunsynk_gentime1on:
  sunsynk_gentime2on:
  sunsynk_gentime3on:
  sunsynk_gentime4on:
  sunsynk_gentime5on:
  sunsynk_gentime6on:
  sunsynk_usetimer:
   initial: true
  sunsynk_energymode:
   initial: true
##
## Personal , can remove
##
  enable_auto_outside_lights:
  enable_auto_gary_office:
  enable_electric_weather_override:
  enable_camera_alert:
  enable_camera_high:

#####
#####
##### Entities Required for Event driven updates
#####
#####
input_select:
  sunsynk_sysworkmode:
    name: SunSynk Sysworkmode
    options:
      - "1"
      - "2"
      - "3"
  sunsynk_time1:
    name: SunSynk Time 1
    options:
      - "00:00"
      - "00:30"
      - "01:00"
      - "01:30"
      - "02:00"
      - "02:30"
      - "03:00"
      - "03:30"
      - "04:00"
      - "04:30"
      - "05:00"
      - "05:30"
      - "06:00"
      - "06:30"
      - "07:00"
      - "07:30"
      - "08:00"
      - "08:30"
      - "09:00"
      - "09:30"
      - "10:00"
      - "10:30"
      - "11:00"
      - "11:30"
      - "12:00"
      - "12:30"
      - "13:00"
      - "13:30"
      - "14:00"
      - "14:30"
      - "15:00"
      - "15:30"
      - "16:00"
      - "16:30"
      - "17:00"
      - "17:30"
      - "18:00"
      - "18:30"
      - "19:00"
      - "19:30"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
      - "23:00"
      - "23:30"
  sunsynk_time2:
    name: SunSynk Time 2
    options:
      - "00:00"
      - "00:30"
      - "01:00"
      - "01:30"
      - "02:00"
      - "02:30"
      - "03:00"
      - "03:30"
      - "04:00"
      - "04:30"
      - "05:00"
      - "05:30"
      - "06:00"
      - "06:30"
      - "07:00"
      - "07:30"
      - "08:00"
      - "08:30"
      - "09:00"
      - "09:30"
      - "10:00"
      - "10:30"
      - "11:00"
      - "11:30"
      - "12:00"
      - "12:30"
      - "13:00"
      - "13:30"
      - "14:00"
      - "14:30"
      - "15:00"
      - "15:30"
      - "16:00"
      - "16:30"
      - "17:00"
      - "17:30"
      - "18:00"
      - "18:30"
      - "19:00"
      - "19:30"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
      - "23:00"
      - "23:30"
  sunsynk_time3:
    name: SunSynk Time 3
    options:
      - "00:00"
      - "00:30"
      - "01:00"
      - "01:30"
      - "02:00"
      - "02:30"
      - "03:00"
      - "03:30"
      - "04:00"
      - "04:30"
      - "05:00"
      - "05:30"
      - "06:00"
      - "06:30"
      - "07:00"
      - "07:30"
      - "08:00"
      - "08:30"
      - "09:00"
      - "09:30"
      - "10:00"
      - "10:30"
      - "11:00"
      - "11:30"
      - "12:00"
      - "12:30"
      - "13:00"
      - "13:30"
      - "14:00"
      - "14:30"
      - "15:00"
      - "15:30"
      - "16:00"
      - "16:30"
      - "17:00"
      - "17:30"
      - "18:00"
      - "18:30"
      - "19:00"
      - "19:30"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
      - "23:00"
      - "23:30"
  sunsynk_time4:
    name: SunSynk Time 4
    options:
      - "00:00"
      - "00:30"
      - "01:00"
      - "01:30"
      - "02:00"
      - "02:30"
      - "03:00"
      - "03:30"
      - "04:00"
      - "04:30"
      - "05:00"
      - "05:30"
      - "06:00"
      - "06:30"
      - "07:00"
      - "07:30"
      - "08:00"
      - "08:30"
      - "09:00"
      - "09:30"
      - "10:00"
      - "10:30"
      - "11:00"
      - "11:30"
      - "12:00"
      - "12:30"
      - "13:00"
      - "13:30"
      - "14:00"
      - "14:30"
      - "15:00"
      - "15:30"
      - "16:00"
      - "16:30"
      - "17:00"
      - "17:30"
      - "18:00"
      - "18:30"
      - "19:00"
      - "19:30"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
      - "23:00"
      - "23:30"
  sunsynk_time5:
    name: SunSynk Time 5
    options:
      - "00:00"
      - "00:30"
      - "01:00"
      - "01:30"
      - "02:00"
      - "02:30"
      - "03:00"
      - "03:30"
      - "04:00"
      - "04:30"
      - "05:00"
      - "05:30"
      - "06:00"
      - "06:30"
      - "07:00"
      - "07:30"
      - "08:00"
      - "08:30"
      - "09:00"
      - "09:30"
      - "10:00"
      - "10:30"
      - "11:00"
      - "11:30"
      - "12:00"
      - "12:30"
      - "13:00"
      - "13:30"
      - "14:00"
      - "14:30"
      - "15:00"
      - "15:30"
      - "16:00"
      - "16:30"
      - "17:00"
      - "17:30"
      - "18:00"
      - "18:30"
      - "19:00"
      - "19:30"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
      - "23:00"
      - "23:30"
  sunsynk_time6:
    name: SunSynk Time 6
    options:
      - "00:00"
      - "00:30"
      - "01:00"
      - "01:30"
      - "02:00"
      - "02:30"
      - "03:00"
      - "03:30"
      - "04:00"
      - "04:30"
      - "05:00"
      - "05:30"
      - "06:00"
      - "06:30"
      - "07:00"
      - "07:30"
      - "08:00"
      - "08:30"
      - "09:00"
      - "09:30"
      - "10:00"
      - "10:30"
      - "11:00"
      - "11:30"
      - "12:00"
      - "12:30"
      - "13:00"
      - "13:30"
      - "14:00"
      - "14:30"
      - "15:00"
      - "15:30"
      - "16:00"
      - "16:30"
      - "17:00"
      - "17:30"
      - "18:00"
      - "18:30"
      - "19:00"
      - "19:30"
      - "20:00"
      - "20:30"
      - "21:00"
      - "21:30"
      - "22:00"
      - "22:30"
      - "23:00"
      - "23:30"
input_text:
  sunsynk_cap1:
    name: SunSynk SOC 1
    initial: "50"
  sunsynk_cap2:
    name: SunSynk SOC 2
    initial: "35"
  sunsynk_cap3:
    name: SunSynk SOC 3
    initial: "35"
  sunsynk_cap4:
    name: SunSynk SOC 4
    initial: "85"
  sunsynk_cap5:
    name: SunSynk SOC 5
    initial: "80"
  sunsynk_cap6:
    name: SunSynk SOC 6
    initial: "70"
    
template:
#####
#####
##### Setup Parameters
#####
#####
#
############################################
##### Main Config Sensor
############################################
  - sensor:
      - name: "SunSynk Config"
        state: "Config Sensor"
        unique_id: "sensor.sunsynk_config"
        attributes:
          login: !secret sunsynk_user
          password: !secret sunsynk_password
          region: 2
          invertor_list_opt: 0
          return_items: 10
          sn_data: !secret sunsynk_sn_data
          sn_flow: !secret sunsynk_sn_flow
          unit_cost: 2.37
          force_short_delay: "false"
          timeout: 2000
#####
##### invertor_list_opt:
##### Select which method must be used to get the invertor list
##### 0 - Get invertor list based on plant id ---- Should work for most people
##### 1 - Get invertor list from account ---- Not all people will have permission to do this
#####
##### force_short_delay - If you do not have access to list gateways and you are certain your update time is set to 60 seconds, set to "true" 
##### return_items:     Number of Items to return in queries. Default 10
##### sn_data:          Inverter SN to use for single data values
#####                   Do a run through then in node red look at global context data under 
#####                   SS_Consolidat -> Config Data -> Inverter Plant
#####                   [Inverter SN]:[Plantid]
##### sn_flow:          Plant ID to use for flow data
#####                   Do a run through then in node red look at global context data under 
#####                   SS_Consolidat -> Config Data -> Inverter Plant
#####                   [Inverter SN]:[Plantid]
#####
#####
##### Consolidated Data
  - sensor: 
      - name: "Sunsynk Usable Inverter"
        state: ""
        unique_id: "sensor.sunsynk_usable_inverter"
  - sensor: 
      - name: "Sunsynk Usable flow"
        state: ""
        unique_id: "sensor.sunsynk_usable_flow"
  - sensor: 
      - name: "Sunsynk Usable Pv"
        state: ""
        unique_id: "sensor.sunsynk_usable_pv"
  - sensor: 
      - name: "Sunsynk Usable Grid"
        state: ""
        unique_id: "sensor.sunsynk_usable_grid"
  - sensor: 
      - name: "Sunsynk Usable Input"
        state: ""
        unique_id: "sensor.sunsynk_usable_input"
  - sensor: 
      - name: "Sunsynk Usable Output"
        state: ""
        unique_id: "sensor.sunsynk_usable_output"
  - sensor: 
      - name: "Sunsynk Usable Load"
        state: ""
        unique_id: "sensor.sunsynk_usable_load"
  - sensor: 
      - name: "Sunsynk Usable Battery"
        state: ""
        unique_id: "sensor.sunsynk_usable_battery"
  - sensor: 
      - name: "Sunsynk Usable Gen"
        state: ""
        unique_id: "sensor.sunsynk_usable_gen"
  - sensor: 
      - name: "Sunsynk Usable Temp"
        state: ""
        unique_id: "sensor.sunsynk_usable_temp"
  - sensor: 
      - name: "Sunsynk Events 1"
        state: ""
        unique_id: "sensor.sunsynk_events_1"
  - sensor: 
      - name: "Sunsynk Events 2"
        state: ""
        unique_id: "sensor.sunsynk_events_2"
  - sensor: 
      - name: "Sunsynk Events 3"
        state: ""
        unique_id: "sensor.sunsynk_events_3"
  - sensor: 
      - name: "Sunsynk Notifications"
        state: ""
        unique_id: "sensor.sunsynk_notifications"
  - sensor: 
      - name: "Sunsynk Errors"
        state: ""
        unique_id: "sensor.sunsynk_errors"
##### Misc Sensors for Energy
  - sensor:
      - name: "Sunsynk Battery etotalchg Pre"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_battery_etotalchg_pre"
        device_class: energy
        unit_of_measurement: kWh
        state: >
          {% if state_attr('sensor.sunsynk_usable_battery', 'etotalchg')|float == 0 %}
           {{ None }}
          {% else %}
           {{ state_attr('sensor.sunsynk_usable_battery', 'etotalchg') }}
          {% endif %}
  - sensor:
      - name: "Sunsynk Battery etotalchg"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_battery_etotalchg"
        device_class: energy
        unit_of_measurement: kWh
        state: >
           {{ states('sensor.sunsynk_filtered_battery_chg') }}
  - sensor:
      - name: "Sunsynk Battery etotaldischg pre"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_battery_etotaldischg_pre"
        device_class: energy
        unit_of_measurement: kWh
        state: >
          {% if state_attr('sensor.sunsynk_usable_battery', 'etotaldischg')|float == 0 %}
           {{ None }}
          {% else %}
           {{ state_attr('sensor.sunsynk_usable_battery', 'etotaldischg') }}
          {% endif %}
  - sensor:
      - name: "Sunsynk Battery etotaldischg"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_battery_etotaldischg"
        device_class: energy
        unit_of_measurement: kWh
        state: >
           {{ states('sensor.sunsynk_filtered_battery_dischg') }}
  - sensor:
      - name: "Sunsynk PV Total Pre"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_pv_total_pre"
        device_class: energy
        unit_of_measurement: kWh
        state: >
          {% if state_attr('sensor.sunsynk_usable_pv', 'etotal')|float == 0 %}
           {{ None }}
          {% else %}
           {{ state_attr('sensor.sunsynk_usable_pv', 'etotal') }}
          {% endif %}
  - sensor:
      - name: "Sunsynk PV Total"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_pv_total"
        device_class: energy
        unit_of_measurement: kWh
        state: >
           {{ states('sensor.sunsynk_filtered_pv') }}
  - sensor:
      - name: "Sunsynk Grid Total Pre"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_grid_total_pre"
        device_class: energy
        unit_of_measurement: kWh
        state: >
          {% if state_attr('sensor.sunsynk_usable_grid', 'totalusedin')|float == 0 %}
           {{ None }}
          {% else %}
           {{ state_attr('sensor.sunsynk_usable_grid', 'totalusedin') }}
          {% endif %}
  - sensor:
      - name: "Sunsynk Grid Total"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_grid_total"
        device_class: energy
        unit_of_measurement: kWh
        state: >
           {{ states('sensor.sunsynk_filtered_grid') }}
  - sensor:
      - name: "Sunsynk Load Total Pre"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_load_total_pre"
        device_class: energy
        unit_of_measurement: kWh
        state: >
          {% if state_attr('sensor.sunsynk_usable_load', 'totalused')|float == 0 %}
           {{ None }}
          {% else %}
           {{ state_attr('sensor.sunsynk_usable_load', 'totalused') }}
          {% endif %}
  - sensor:
      - name: "Sunsynk Load Total"
        state_class: total_increasing
        unique_id: "sensor.sunsynk_load_total"
        device_class: energy
        unit_of_measurement: kWh
        state: >
           {{ states('sensor.sunsynk_filtered_load') }}
##### Other Sensors 
  - sensor:
      - name: "Current Use Timer"
        state: >
          {% if is_state_attr('sensor.sunsynk_usable_inverter', 'usetimer', true ) %}
            Use Timer Enabled
          {% else %}
            Use Timer Disabled
          {% endif %}
  - sensor:
      - name: "Sunsynk Battery Temp"
        state: >
            {{state_attr('sensor.sunsynk_usable_temp', 'battery')|float}}
  - sensor:
      - name: "Sunsynk AC Temp"
        state: >
            {{state_attr('sensor.sunsynk_usable_temp', 'ac')|float}}
  - sensor:
      - name: "Sunsynk DC Temp"
        state: >
            {{state_attr('sensor.sunsynk_usable_temp', 'dc')|float}}
  - sensor:
      - name: "Sunsynk Battery Soc"
        state: >
            {{state_attr('sensor.sunsynk_usable_battery', 'soc')|float}}
  - sensor:
      - name: "Sunsynk Battery Power"
        state: >
            {{state_attr('sensor.sunsynk_usable_battery', 'power')|float}}
  - sensor:
      - name: "Sunsynk PV1"
        state: >
            {{state_attr('sensor.sunsynk_usable_pv', '1_power')|float}}
  - sensor:
      - name: "Sunsynk PV2"
        state: >
            {{state_attr('sensor.sunsynk_usable_pv', '2_power')|float}}
  - sensor:
      - name: "Sunsynk PV"
        state: >
            {{state_attr('sensor.sunsynk_usable_pv', 'power')|float}}
  - sensor:
      - name: "Sunsynk Grid Power"
        state: >
            {{state_attr('sensor.sunsynk_usable_grid', 'power')|float}}
  - sensor:
      - name: "Sunsynk Grid Online"
        state: >
            {{state_attr('sensor.sunsynk_usable_grid', 'gridonline')|float}}
  - sensor:
      - name: "Sunsynk Load Power"
        state: >
            {{state_attr('sensor.sunsynk_usable_load', 'power')|float}}
  - sensor:
      - name: "Sunsynk Inverter Internalpowerusager"
        state: >
            {{state_attr('sensor.sunsynk_usable_inverter', 'internalpowerusage')|float}}
  - sensor:
      - name: "SunSynk Logger Status"
        state: >
         {% if state_attr("sensor.sunsynk_usable_inverter", "status") == 0 -%}
            Offline
         {%- elif state_attr("sensor.sunsynk_usable_inverter", "status") == 1 -%}
            Online
         {%- elif state_attr("sensor.sunsynk_usable_inverter", "status") == 2 -%}
            Warning
         {%- elif state_attr("sensor.sunsynk_usable_inverter", "status") == 3 -%}
            Fault
         {%- elif state_attr("sensor.sunsynk_usable_inverter", "status") == 4 -%}
            Upgrading
         {%- else -%}
            {{state_attr("sensor.sunsynk_usable_inverter", "status")}}
         {%- endif %}
  - sensor:
      - name: "SunSynk Logger Last Update"
        device_class: timestamp
        state: >
         {{ state_attr("sensor.sunsynk_usable_inverter", "lastupdated") }}
